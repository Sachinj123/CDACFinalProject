{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachin\\\\Desktop\\\\PGDAC-Raktkosh-main\\\\PGDAC-Raktkosh-main\\\\raktkosh-final\\\\frontend-app\\\\src\\\\pages\\\\verification.jsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, Container, Fab, Typography, CircularProgress, Link, CardActions } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../config/axios.config';\nimport useStyles from '../styles/pages/verification';\nimport clsx from 'clsx';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WaitIcon from '@material-ui/icons/HourglassEmpty';\nimport { Link as RouteLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerificationPage = props => {\n  _s();\n\n  const {\n    token\n  } = useParams();\n  const classes = useStyles();\n  const [error, handleError] = useState(false);\n  const [success, handleSuccess] = useState(false);\n  const [loading, handleLoading] = useState(true);\n  useEffect(() => {\n    handleLoading(true);\n    axios.get(`/account/verify/${token}`).then(res => handleSuccess(true)).catch(err => handleError(true)).finally(() => {\n      handleLoading(false);\n    });\n  }, [token]);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n    [classes.buttonError]: error\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"textSecondary\",\n          children: [error && \"Invalid Token\", loading && \"Verifying\", success && \"Verified\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(Fab, {\n            color: \"primary\",\n            className: buttonClassname,\n            children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 26\n            }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 51\n            }, this) : /*#__PURE__*/_jsxDEV(WaitIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 68,\n            className: classes.fabProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), (success || error) && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          component: RouteLink,\n          to: \"/signin\",\n          variant: \"h5\",\n          children: \"Signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerificationPage, \"XyuZqR2GyVG+sQRmRggL+rRePBs=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = VerificationPage;\nexport default VerificationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerificationPage\");","map":{"version":3,"names":["Card","CardContent","Container","Fab","Typography","CircularProgress","Link","CardActions","useEffect","useState","useParams","axios","useStyles","clsx","CheckIcon","ErrorIcon","WaitIcon","RouteLink","VerificationPage","props","token","classes","error","handleError","success","handleSuccess","loading","handleLoading","get","then","res","catch","err","finally","buttonClassname","buttonSuccess","buttonError","root","card","loader","wrapper","fabProgress"],"sources":["C:/Users/sachin/Desktop/PGDAC-Raktkosh-main/PGDAC-Raktkosh-main/raktkosh-final/frontend-app/src/pages/verification.jsx"],"sourcesContent":["import { Card, CardContent, Container, Fab, Typography, CircularProgress, Link, CardActions } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../config/axios.config';\nimport useStyles from '../styles/pages/verification';\nimport clsx from 'clsx';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport WaitIcon from '@material-ui/icons/HourglassEmpty';\nimport { Link as RouteLink } from \"react-router-dom\";\n\nconst VerificationPage = props => {\n  const { token } = useParams();\n  const classes = useStyles();\n  const [error, handleError] = useState(false);\n  const [success, handleSuccess] = useState(false);\n  const [loading, handleLoading] = useState(true);\n\n  useEffect(() => {\n    handleLoading(true);\n    axios.get(`/account/verify/${token}`)\n      .then(res => handleSuccess(true))\n      .catch(err => handleError(true))\n      .finally(() => {\n        handleLoading(false);\n      });\n  }, [token]);\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n    [classes.buttonError]: error,\n  });\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Card variant=\"outlined\" className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            {error && \"Invalid Token\"}\n            {loading && \"Verifying\"}\n            {success && \"Verified\"}\n          </Typography>\n        </CardContent>\n        <div className={classes.loader}>\n          <div className={classes.wrapper}>\n            <Fab\n              color=\"primary\"\n              className={buttonClassname}\n            >\n              {success ? <CheckIcon /> : (error ? <ErrorIcon /> : <WaitIcon />)}\n            </Fab>\n            {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n          </div>\n        </div>\n        {\n          (success || error) && (\n            <CardActions>\n              <Link component={RouteLink} to=\"/signin\" variant=\"h5\">\n                {\"Signin\"}\n              </Link>\n            </CardActions>\n          )\n        }\n      </Card>\n    </Container>\n  );\n};\nexport default VerificationPage;\n"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,GAAvC,EAA4CC,UAA5C,EAAwDC,gBAAxD,EAA0EC,IAA1E,EAAgFC,WAAhF,QAAmG,mBAAnG;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASV,IAAI,IAAIW,SAAjB,QAAkC,kBAAlC;;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;EAAA;;EAChC,MAAM;IAAEC;EAAF,IAAYV,SAAS,EAA3B;EACA,MAAMW,OAAO,GAAGT,SAAS,EAAzB;EACA,MAAM,CAACU,KAAD,EAAQC,WAAR,IAAuBd,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACe,OAAD,EAAUC,aAAV,IAA2BhB,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACiB,OAAD,EAAUC,aAAV,IAA2BlB,QAAQ,CAAC,IAAD,CAAzC;EAEAD,SAAS,CAAC,MAAM;IACdmB,aAAa,CAAC,IAAD,CAAb;IACAhB,KAAK,CAACiB,GAAN,CAAW,mBAAkBR,KAAM,EAAnC,EACGS,IADH,CACQC,GAAG,IAAIL,aAAa,CAAC,IAAD,CAD5B,EAEGM,KAFH,CAESC,GAAG,IAAIT,WAAW,CAAC,IAAD,CAF3B,EAGGU,OAHH,CAGW,MAAM;MACbN,aAAa,CAAC,KAAD,CAAb;IACD,CALH;EAMD,CARQ,EAQN,CAACP,KAAD,CARM,CAAT;EAUA,MAAMc,eAAe,GAAGrB,IAAI,CAAC;IAC3B,CAACQ,OAAO,CAACc,aAAT,GAAyBX,OADE;IAE3B,CAACH,OAAO,CAACe,WAAT,GAAuBd;EAFI,CAAD,CAA5B;EAKA,oBACE,QAAC,SAAD;IAAW,QAAQ,EAAC,IAApB;IAAyB,SAAS,EAAED,OAAO,CAACgB,IAA5C;IAAA,uBACE,QAAC,IAAD;MAAM,OAAO,EAAC,UAAd;MAAyB,SAAS,EAAEhB,OAAO,CAACiB,IAA5C;MAAA,wBACE,QAAC,WAAD;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAyB,KAAK,EAAC,eAA/B;UAAA,WACGhB,KAAK,IAAI,eADZ,EAEGI,OAAO,IAAI,WAFd,EAGGF,OAAO,IAAI,UAHd;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,SAAS,EAAEH,OAAO,CAACkB,MAAxB;QAAA,uBACE;UAAK,SAAS,EAAElB,OAAO,CAACmB,OAAxB;UAAA,wBACE,QAAC,GAAD;YACE,KAAK,EAAC,SADR;YAEE,SAAS,EAAEN,eAFb;YAAA,UAIGV,OAAO,gBAAG,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QAAH,GAAoBF,KAAK,gBAAG,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QAAH,gBAAmB,QAAC,QAAD;cAAA;cAAA;cAAA;YAAA;UAJtD;YAAA;YAAA;YAAA;UAAA,QADF,EAOGI,OAAO,iBAAI,QAAC,gBAAD;YAAkB,IAAI,EAAE,EAAxB;YAA4B,SAAS,EAAEL,OAAO,CAACoB;UAA/C;YAAA;YAAA;YAAA;UAAA,QAPd;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,EAoBI,CAACjB,OAAO,IAAIF,KAAZ,kBACE,QAAC,WAAD;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAEL,SAAjB;UAA4B,EAAE,EAAC,SAA/B;UAAyC,OAAO,EAAC,IAAjD;UAAA,UACG;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QArBN;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAvDD;;GAAMC,gB;UACcR,S,EACFE,S;;;KAFZM,gB;AAwDN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}