{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createTheme } from '@material-ui/core';\nimport { darkTheme, lightTheme } from '../styles/theme';\n\nconst useTheme = () => {\n  _s();\n\n  const themeType = useSelector(store => store.theme);\n  return useMemo(() => createTheme({\n    palette: { ...(themeType ? darkTheme : lightTheme)\n    }\n  }), [themeType]);\n};\n\n_s(useTheme, \"YskXuO8gHc/0h5KoHbLgTUW0jYU=\", false, function () {\n  return [useSelector];\n});\n\nexport default useTheme;","map":{"version":3,"names":["useMemo","useSelector","createTheme","darkTheme","lightTheme","useTheme","themeType","store","theme","palette"],"sources":["C:/Users/sachin/Desktop/PGDAC-Raktkosh-main/PGDAC-Raktkosh-main/raktkosh-final/frontend-app/src/hooks/theme.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createTheme } from '@material-ui/core';\nimport { darkTheme, lightTheme } from '../styles/theme';\n\nconst useTheme = () => {  \n  const themeType = useSelector(store => store.theme);\n  return useMemo (\n    () => createTheme({\n      palette: {\n        ...(themeType ? darkTheme : lightTheme)\n      }\n    }),\n    [themeType]\n  );\n};\n\nexport default useTheme;\n"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA7B;EACA,OAAOR,OAAO,CACZ,MAAME,WAAW,CAAC;IAChBO,OAAO,EAAE,EACP,IAAIH,SAAS,GAAGH,SAAH,GAAeC,UAA5B;IADO;EADO,CAAD,CADL,EAMZ,CAACE,SAAD,CANY,CAAd;AAQD,CAVD;;GAAMD,Q;UACcJ,W;;;AAWpB,eAAeI,QAAf"},"metadata":{},"sourceType":"module"}