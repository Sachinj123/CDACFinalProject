[{"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\index.js":"1","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\reportWebVitals.js":"2","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\index.js":"3","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\app\\index.jsx":"4","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\config\\axios.config.js":"5","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\landing.jsx":"6","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\verification.jsx":"7","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\signup.jsx":"8","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\signin.jsx":"9","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\forgotpassword.jsx":"10","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\resetpassword.jsx":"11","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\main.jsx":"12","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\index.js":"13","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\actions\\index.js":"14","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\index.js":"15","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\main.js":"16","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\signup.js":"17","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\verification.js":"18","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\user_details.js":"19","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\theme.js":"20","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\post.jsx":"21","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\home.jsx":"22","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\bloodbank.jsx":"23","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\aboutus.jsx":"24","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\contactus.jsx":"25","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\profile.jsx":"26","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\showProfile.jsx":"27","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\camppost.jsx":"28","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\bloodbankdetails.jsx":"29","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\axios.js":"30","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\theme.js":"31","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\copyright\\index.jsx":"32","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\account-enable-dialog\\index.jsx":"33","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\bloodbankdetails.js":"34","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\post.js":"35","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\post-form\\index.jsx":"36","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\blood-bank-form\\index.jsx":"37","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\user-address-form\\index.jsx":"38","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\camp-form\\index.jsx":"39","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\blood-repository-form\\index.jsx":"40","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\theme\\index.js":"41","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\blood-bank-form.js":"42","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\post-form.js":"43","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\bloodbank.js":"44","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\profile.js":"45","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\posts\\profilePost.jsx":"46","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\posts\\index.jsx":"47","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\profile-edit-form\\index.jsx":"48"},{"size":803,"mtime":1678422630607,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":1678422630635,"results":"51","hashOfConfig":"50"},{"size":196,"mtime":1678422631729,"results":"52","hashOfConfig":"50"},{"size":1731,"mtime":1678422630670,"results":"53","hashOfConfig":"50"},{"size":298,"mtime":1678422631081,"results":"54","hashOfConfig":"50"},{"size":2979,"mtime":1678422631390,"results":"55","hashOfConfig":"50"},{"size":2235,"mtime":1678422631699,"results":"56","hashOfConfig":"50"},{"size":9104,"mtime":1678422631634,"results":"57","hashOfConfig":"50"},{"size":6256,"mtime":1678683010327,"results":"58","hashOfConfig":"50"},{"size":4456,"mtime":1678422631335,"results":"59","hashOfConfig":"50"},{"size":6469,"mtime":1678422631507,"results":"60","hashOfConfig":"50"},{"size":6568,"mtime":1678422631422,"results":"61","hashOfConfig":"50"},{"size":214,"mtime":1678422631796,"results":"62","hashOfConfig":"50"},{"size":148,"mtime":1678422631761,"results":"63","hashOfConfig":"50"},{"size":96,"mtime":1678422631143,"results":"64","hashOfConfig":"50"},{"size":1724,"mtime":1678422632092,"results":"65","hashOfConfig":"50"},{"size":916,"mtime":1678422632140,"results":"66","hashOfConfig":"50"},{"size":1098,"mtime":1678422632171,"results":"67","hashOfConfig":"50"},{"size":229,"mtime":1678422631841,"results":"68","hashOfConfig":"50"},{"size":191,"mtime":1678422631809,"results":"69","hashOfConfig":"50"},{"size":311,"mtime":1678422631451,"results":"70","hashOfConfig":"50"},{"size":629,"mtime":1678422631365,"results":"71","hashOfConfig":"50"},{"size":4537,"mtime":1678422631222,"results":"72","hashOfConfig":"50"},{"size":2626,"mtime":1678422631190,"results":"73","hashOfConfig":"50"},{"size":1627,"mtime":1678514513712,"results":"74","hashOfConfig":"50"},{"size":5179,"mtime":1678422631476,"results":"75","hashOfConfig":"50"},{"size":4416,"mtime":1678422631539,"results":"76","hashOfConfig":"50"},{"size":4904,"mtime":1678422631269,"results":"77","hashOfConfig":"50"},{"size":6194,"mtime":1678422631253,"results":"78","hashOfConfig":"50"},{"size":644,"mtime":1678422631121,"results":"79","hashOfConfig":"50"},{"size":439,"mtime":1678422631175,"results":"80","hashOfConfig":"50"},{"size":428,"mtime":1678422630875,"results":"81","hashOfConfig":"50"},{"size":1211,"mtime":1678422630714,"results":"82","hashOfConfig":"50"},{"size":502,"mtime":1678422632061,"results":"83","hashOfConfig":"50"},{"size":620,"mtime":1678422631998,"results":"84","hashOfConfig":"50"},{"size":5474,"mtime":1678422630939,"results":"85","hashOfConfig":"50"},{"size":9787,"mtime":1678422630749,"results":"86","hashOfConfig":"50"},{"size":5785,"mtime":1678422631065,"results":"87","hashOfConfig":"50"},{"size":9054,"mtime":1678422630820,"results":"88","hashOfConfig":"50"},{"size":5957,"mtime":1678422630785,"results":"89","hashOfConfig":"50"},{"size":620,"mtime":1678422632203,"results":"90","hashOfConfig":"50"},{"size":257,"mtime":1678422631904,"results":"91","hashOfConfig":"50"},{"size":385,"mtime":1678422631967,"results":"92","hashOfConfig":"50"},{"size":313,"mtime":1678422632030,"results":"93","hashOfConfig":"50"},{"size":476,"mtime":1678422632108,"results":"94","hashOfConfig":"50"},{"size":2513,"mtime":1678422630985,"results":"95","hashOfConfig":"50"},{"size":1833,"mtime":1678422630970,"results":"96","hashOfConfig":"50"},{"size":9525,"mtime":1678422631020,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1rknsha",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"100"},"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\index.js",[],["212","213"],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\reportWebVitals.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\index.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\app\\index.jsx",["214","215","216","217"],"import { Button, CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { switchTheme } from '../redux/actions';\nimport { useTheme } from \"../hooks\";\nimport axios from '../config/axios.config';\nimport SigninPage from \"../pages/signin\";\nimport SignupPage from \"../pages/signup\";\nimport MainPage from \"../pages/main\";\nimport VerificationPage from \"../pages/verification\";\nimport LandingPage from \"../pages/landing\";\nimport ForgotPassword from \"../pages/forgotpassword\";\nimport ResetPassword from \"../pages/resetpassword\";\n\n\nconst Application = props => {\n  const location = useLocation();\n  const theme = useTheme();\n\n  const requestServer = () => {\n    axios.get(\"/hello\")\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch location={location}>\n        <Route exact path=\"/signin\">\n          <SigninPage />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignupPage />\n        </Route>\n        <Route exact path=\"/resetPassword/\">\n          <ResetPassword />\n        </Route>\n        <Route exact path=\"/forgotpassword\">\n          <ForgotPassword />\n        </Route>\n        \n        <Route exact path=\"/verify/:token?\">\n          <VerificationPage />\n        </Route>\n        <Route path=\"/\" exact>\n          <LandingPage />\n        </Route>\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n        <Route path=\"*\">\n          <h1>Error</h1>\n        </Route>\n       \n      </Switch>\n    </ThemeProvider>\n  );\n};\n\nexport default Application;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\config\\axios.config.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\landing.jsx",["218","219"],"import { Paper, makeStyles, Typography, Button, Link } from \"@material-ui/core\";\nimport { grey, red } from \"@material-ui/core/colors\";\nimport { useHistory } from \"react-router\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100vw\",\n    minHeight: \"100vh\",\n    backgroundImage: 'url(https://www.healthline.com/hlcmsresource/images/Blood_Donation-1200x549-facebook.jpg)',\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    padding: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    color: red[900],\n    textDecoration: \"underline\"\n  },\n  content: {\n    padding: \"30px\",\n    backgroundColor: \"#fafafaaa\",\n    width: \"60%\",\n    marginTop: theme.spacing(2),\n    \"&:nth-child(even)\": {\n      marginLeft: \"auto\"\n    }\n  },\n  button: {\n    margin: \"5px\"\n  }\n}));\n\nconst LandingPage = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <Typography variant=\"h1\" className={classes.title}>\n          Raktkosh\n        </Typography>\n        <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={() => history.push(\"/signup\")} className={classes.button}>\n          Signup\n        </Button>\n        <Button variant=\"outlined\" size=\"large\" color=\"primary\" onClick={() => history.push(\"/signin\")} className={classes.button}>\n          Signin\n        </Button>\n      </Paper>\n      <Paper className={classes.content}>\n        <Typography variant=\"h3\">WHO WE ARE ?</Typography>\n        <Typography variant=\"h5\">is an online platform that brings the blood donors and receiver under one roof. It allows the receiver search for the donors in their locality with ease and help them to connect easily without any hassle. It also allows the donors the look up for the receiver or blood bank near them to donate blood.</Typography>\n      </Paper>\n      <Paper className={classes.content}>\n        <Typography variant=\"h3\">BLOOD DONORS</Typography>\n        <Typography variant=\"h5\">RAKTKOSH provides users interface to help others by donating blood either directly by responding to seekers or by going to campaigns initiated by Blood Banks.</Typography>\n      </Paper>\n      <Paper className={classes.content}>\n        <Typography variant=\"h3\">BLOOD RECIEPIENTS</Typography>\n        <Typography variant=\"h5\">RAKTKOSH provides an interface for users to search blood doners in respective area and to communicate with them for transfusion.</Typography>\n      </Paper>\n\n      <Paper className={classes.content}>\n        <Typography variant=\"h3\">BLOOD BANKS</Typography>\n        <Typography variant=\"h5\">RAKTKOSH provides an interface for blood banks to provide blood to respective seekers and also to search blood doners in respective area by initiating camapigns for blood donation.</Typography>\n      </Paper>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\verification.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\signup.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\signin.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\forgotpassword.jsx",["220","221","222","223"],"import {\n  Avatar, Box, Checkbox,\n  Button, Paper, Backdrop,\n  CircularProgress, Snackbar,\n  Grid, TextField, Typography,\n  CssBaseline, FormControlLabel, Link\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link as RouteLink, useHistory } from \"react-router-dom\";\nimport axios from \"../config/axios.config\";\nimport Copyright from '../components/copyright';\nimport useStyles from '../styles/pages/signup';\nimport { setUserDetails } from '../redux/actions';\nimport { Alert } from \"@material-ui/lab\";\n\n\nconst ForgotPassword = (props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [backdrop, toggleBackdrop] = useState(false);\n  const [form, handleForm] = useState({\n    username: \"\",\n  });\n  const [errors, handleErrors] = useState({});\n  const [response, handleResponse] = useState({\n    open: false\n  });\n\n  // const history = useHistory();\n\n  const handleChange = e => {\n    handleForm(form => ({ ...form, [e.target.name]: e.target.value }))\n  };\n\n  const handleBlur = e => {\n    if (e.target.value === \"\") {\n      handleErrors(errors => ({ ...errors, [e.target.name]: `${e.target.name} is required.` }));\n    }\n    else {\n      handleErrors(errors => {\n        let error = { ...errors };\n        delete error[e.target.name];\n        return error;\n      });\n    }\n  };\n\n  const validateForm = () => {\n    return (Object.keys(form).filter(field => form[field] === \"\").length === 0 && Object.keys(errors).length === 0);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    toggleBackdrop(true);\n    handleResponse(({ open: false }));\n    axios.post(\"/account/forgotpassword\", { ...form })\n      .then(res => {\n        handleResponse(({ open: true, severity: \"success\", message: \"OTP Sent\" }))\n        return res.data;\n      }, 2000)\n\n\n      .catch(error => {\n        if (!error.response) {\n          handleResponse(({ open: true, severity: \"error\", message: \"Network Error\" }));\n        }\n        else {\n          handleResponse(({ open: true, severity: \"error\", message: error.response.data.message }));\n        }\n      })\n      .then(\n        history.push(\"/resetpassword\")\n      )\n      .finally(() => toggleBackdrop(false));\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Backdrop className={classes.backdrop} open={backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={response.severity}>\n          {response.message}\n        </Alert>\n      </Snackbar>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Submit\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit} method=\"post\">\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"username\"\n              label=\"Username\"\n              type=\"text\"\n              id=\"username\"\n              autoFocus\n              value={form?.username}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.username !== undefined}\n              helperText={errors.username}\n            />\n\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Submit\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link component={RouteLink} to=\"/signin\" variant=\"body2\">\n                  Already have an account? Sign In\n                </Link>\n              </Grid>\n\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ForgotPassword;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\resetpassword.jsx",["224","225","226","227","228"],"import { \n    Avatar, Box, Checkbox,\n    Button, Paper, Backdrop,\n    CircularProgress, Snackbar,\n    Grid, TextField, Typography,\n    CssBaseline, FormControlLabel,Link\n  } from \"@material-ui/core\";\n  import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n  import { useState } from \"react\";\n  import { useDispatch } from \"react-redux\";\n  import { Link as RouteLink, useHistory } from \"react-router-dom\";\n  import axios from \"../config/axios.config\";\n  import Copyright from '../components/copyright';\n  import useStyles from '../styles/pages/signup';\n  import { setUserDetails } from '../redux/actions';\n  import { Alert } from \"@material-ui/lab\";\n\n  \n  const ResetPassword = (props) => {\n    const history = useHistory();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [backdrop, toggleBackdrop] = useState(false);\n    const [form, handleForm] = useState({\n      username: \"\",\n      newpassword: \"\",\n      confirmpassword: \"\",\n      otp: \"\"\n    });\n    const [errors, handleErrors] = useState({});\n    const [response, handleResponse] = useState({\n      open: false\n    });\n \n    const handleChange = e => {\n      handleForm(form => ({...form, [e.target.name]: e.target.value}))\n    };\n  \n    const handleBlur = e => {\n      if (e.target.value === \"\") {\n        handleErrors(errors => ({...errors, [e.target.name]: `${e.target.name} is required.`}));\n      }\n      else {\n        handleErrors(errors => {\n          let error =  {...errors};\n          delete error[e.target.name];\n          return error;\n        });\n      }\n    };\n  \n    const validateForm = () => {\n      return (Object.keys(form).filter(field => form[field] === \"\").length === 0 && Object.keys(errors).length === 0);\n    };\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if(form.newpassword.value==form.confirmpassword.value){\n        if (!validateForm()) {\n            return;\n          }\n      }\n     \n      toggleBackdrop(true);\n      handleResponse(({open: false}));\n      axios.post(\"/account/resetpassword\", {...form})\n        .then(res => {\n          handleResponse(({open: true, severity: \"success\", message: \"OTP Sent\"}))\n          return res.data;\n        },2000)\n       \n        \n        .catch(error => {\n          if (!error.response) {\n            handleResponse(({open: true, severity: \"error\", message: \"Network Error\"}));\n          }\n          else {\n            handleResponse(({open: true, severity: \"error\", message: error.response.data.message}));\n          }\n        })\n        .then(\n            history.push(\"/signin\")\n        )\n        .finally(() => toggleBackdrop(false));\n    };\n    \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Backdrop className={classes.backdrop} open={backdrop}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n          <Alert severity={response.severity}>\n            {response.message}\n          </Alert>\n        </Snackbar>\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Submit\n            </Typography>\n            <form className={classes.form} noValidate onSubmit={handleSubmit} method=\"post\">\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"username\"\n                label=\"Username\"\n                type=\"text\"\n                id=\"username\"\n                autoFocus\n                value={form?.username}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.username !== undefined}\n                helperText={errors.username}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"newpassword\"\n                label=\"New Password\"\n                type=\"text\"\n                id=\"newpassword\"\n                autoFocus\n                value={form?.newpassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.newpassword !== undefined}\n                helperText={errors.newpassword}\n              />\n               <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"confirmpassword\"\n                label=\"Confirm Password\"\n                type=\"text\"\n                id=\"confirmpassword\"\n                autoFocus\n                value={form?.confirmpassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.confirmpassword !== undefined}\n                helperText={errors.confirmpassword}\n              />\n             <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"otp\"\n                label=\"OTP\"\n                type=\"text\"\n                id=\"otp\"\n                autoFocus\n                value={form?.otp}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.otp !== undefined}\n                helperText={errors.otp}\n              />\n             \n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Submit\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link component={RouteLink} to=\"/signin\" variant=\"body2\">\n                  Already have an account? Sign In\n                  </Link>\n                </Grid>\n                \n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n  \n  export default ResetPassword;\n  ","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\main.jsx",["229","230"],"import React, { useEffect } from 'react';\nimport { Route, useHistory } from \"react-router\";\nimport clsx from 'clsx';\nimport {\n  useTheme, Drawer, AppBar, Toolbar, List, CssBaseline, Typography,\n  Divider, IconButton, ListItem, ListItemText, ListItemIcon\n} from '@material-ui/core';\nimport {\n  AccountCircle, ExitToApp, ChevronLeft, ChevronRight, LocalHospital, LocalHospitalOutlined,\n  WbSunny, Menu, Home, PostAdd, Brightness2, SupervisedUserCircleOutlined\n} from '@material-ui/icons';\nimport CampaignIcon from '@mui/icons-material/Campaign';\n\nimport useStyles from '../styles/pages/main';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { switchTheme } from '../redux/actions';\nimport axios from '../config/axios.config';\nimport HomePage from './home';\nimport PostPage from './post';\nimport { title } from '../application.json';\nimport Copyright from '../components/copyright';\nimport ProfilePage from './profile';\nimport { setUserDetails } from '../redux/actions';\nimport BloodBankPage from './bloodbank';\nimport BloodBankDetails from './bloodbankdetails';\nimport AccountNotEnableDialog from '../components/account-enable-dialog';\nimport ShowProfile from './showProfile';\nimport CampPostTable from './camppost';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport InfoIcon from '@mui/icons-material/Info';\nimport ContactUs from './contactus';\nimport AboutUs from './aboutus';\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const userInfo = useSelector(store => store.user);\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const pages = [\n    { pagename: 'Home', link: \"/home\", component: <Home /> },\n    { pagename: 'Profile', link: `/profile/`, component: <AccountCircle /> },\n    { pagename: 'Post', link: \"/post\", component: <PostAdd /> },\n    { pagename: 'Blood Bank', link: \"/bloodbank\", component: <LocalHospital /> },\n    { pagename: 'Add Camp', link: \"/camp\", component: <CampaignIcon /> },\n    { pagename: 'About Us', link: \"/about\", component: <InfoIcon /> },\n    { pagename: 'Contact Us', link: \"/contact\", component: <GroupsIcon /> }\n  ]\n\n  const filterpage = pages.filter(\n    function (page) {\n      if (userInfo.authority === \"BLOOD_BANK\" || userInfo.authority === \"CAMP\") {\n        if (page.pagename === \"Post\") {\n          return null;\n        }\n      }\n      return page;\n    }\n  )\n\n  const history = useHistory();\n\n  const logout = () => {\n    localStorage.setItem(\"token\", \"\");\n    history.push(\"/signin\");\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      history.push(\"/signin\");\n    }\n    else {\n      if (Object.keys(userInfo).length === 0) {\n        axios.get(\"/account/info/\" + localStorage.getItem(\"token\"))\n          .then(res => res.data)\n          .then(data => {\n            let { name, email, username, id, enabled, authorities: [...authority] } = data;\n            authority = authority[0].authority;\n            dispatch(setUserDetails({ name, email, username, id, enabled, authority }));\n            return data;\n          })\n          .catch(err => console.log(err));\n      }\n    }\n  }, [history, dispatch, userInfo]);\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <AccountNotEnableDialog open={!userInfo.enabled} />\n\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={() => dispatch(switchTheme())}\n          >\n            {\n              useSelector(store => store.theme)\n                ? <Brightness2 />\n                : <WbSunny />\n            }\n          </IconButton>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={logout}\n          >\n            <ExitToApp />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRight /> : <ChevronLeft />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {filterpage.map((entry, index) => (\n            <ListItem onClick={() => history.push(entry.link)} key={index} className={classes.links}>\n              <ListItemIcon>{entry.component}</ListItemIcon>\n              <ListItemText primary={entry.pagename} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Route path=\"/home\">\n          <HomePage />\n        </Route>\n        <Route path=\"/profile/\">\n          <ProfilePage user={userInfo.id} />\n        </Route>\n        <Route path=\"/post\">\n          <PostPage />\n        </Route>\n        <Route exact path=\"/bloodbank\">\n          <BloodBankPage />\n        </Route>\n        <Route path=\"/bloodbank/:id\">\n          <BloodBankDetails />\n        </Route>\n        <Route path=\"/showProfile/:id\">\n          <ShowProfile />\n        </Route>\n        <Route path=\"/camp\">\n          <CampPostTable />\n        </Route>\n        <Route path=\"/contact\">\n          <ContactUs />\n        </Route>\n        <Route path=\"/about\">\n          <AboutUs />\n        </Route>\n\n        <Copyright className={classes.copyright} />\n      </main>\n    </div>\n  );\n}\n\nexport default MainPage;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\index.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\actions\\index.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\index.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\main.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\signup.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\verification.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\user_details.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\redux\\reducers\\theme.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\post.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\home.jsx",["231","232","233"],"import { Grid } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport Post from \"../components/posts\";\nimport useStyles from \"../styles/components/post\";\nimport useAxios from \"../hooks/axios\";\n\nconst HomePage = props => {\n  const classes = useStyles();\n\n  const [posts, error, waiting] = useAxios(`/post/`);\n\n  return (\n    <Grid container spacing={2}>\n      {\n        posts &&\n        posts.map((post, idx) => (\n          <Grid item xs={12} sm={6} md={4} className={classes.postContainer} key={idx}>\n            <Post {...post} />\n          </Grid>\n        ))\n      }\n    </Grid>\n  );\n};\n\nexport default HomePage;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\bloodbank.jsx",["234"],"\nimport {\n  Backdrop,\n  CircularProgress,\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Divider,\n  Fab,\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Add, Delete } from \"@material-ui/icons\";\nimport { Link } from \"@material-ui/core\";\nimport { Link as RLink } from \"react-router-dom\";\nimport { useAxios } from \"../hooks/\";\nimport useStyles from \"../styles/pages/bloodbank\";\nimport { useSelector } from \"react-redux\";\nimport BloodBankForm from \"../components/blood-bank-form\";\nimport { useState } from \"react\";\nimport axios from \"../config/axios.config\";\n\nconst BloodBankPage = (props) => {\n  const classes = useStyles();\n  const userInfo = useSelector((store) => store.user);\n  const [banks, error, waiting] = useAxios(\"/bloodbank/list\");\n  const [open, handleOpen] = useState(false);\n  const [response, handleResponse] = useState({\n    loading: false,\n    open: false,\n  });\n\n  const handleDelete = (id) => {\n    handleResponse((res) => ({ ...res, loading: true }));\n    axios\n      .delete(`/bloodbank/${id}`)\n      .then((res) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"success\",\n          message: \"Blood Bank Deleted Successfully\",\n          \n        }));\n      })\n      .catch((err) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"error\",\n          message: \"Failed To Delete Blood Bank\",\n        }));\n      })\n      .finally(() => {\n        handleResponse((res) => ({ ...res, open: true, loading: false }));\n        window.location.reload();\n      });\n  };\n\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={waiting}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Snackbar\n        open={response.open}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      >\n        <Alert severity={response.severity}>{response.message}</Alert>\n      </Snackbar>\n\n      <BloodBankForm open={open} handleClose={() => handleOpen(false)} />\n\n      <TableContainer component={Paper} className={classes.container}>\n        <Typography component=\"h1\" className={classes.title}>\n          Registerd Blood Banks\n          {(userInfo.authority === \"ADMIN\") && (\n            <Fab\n              variant=\"extended\"\n              color=\"primary\"\n              className={classes.add_btn}\n              onClick={() => handleOpen(!false)}\n            >\n              <Add />\n              Add Blood Bank\n            </Fab>\n          )}\n        </Typography>\n        <Divider absolute />\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Reg. ID</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Mobile</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Open At</TableCell>\n              <TableCell align=\"right\">Close At</TableCell>\n              {(userInfo.authority === \"ADMIN\" ) && (\n                <TableCell align=\"right\">Delete</TableCell>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {banks &&\n              banks.map((row) => (\n                <TableRow key={row.regID}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Link to={`/bloodbank/${row.id}`} component={RLink}>\n                      {row.regID}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"right\">{row.name}</TableCell>\n                  <TableCell align=\"right\">{row.mobile}</TableCell>\n                  <TableCell align=\"right\">{row.email}</TableCell>\n                  <TableCell align=\"right\">{row.openAt}</TableCell>\n                  <TableCell align=\"right\">{row.closeAt}</TableCell>\n                  {(userInfo.authority === \"ADMIN\" ) && (\n                    <TableCell align=\"center\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"secondary\"\n                        onClick={() => handleDelete(row.id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default BloodBankPage;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\aboutus.jsx",["235","236","237"],"import { Grid, Typography, Divider, Paper, makeStyles } from \"@material-ui/core\";\n\n\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\nimport InfoIcon from '@mui/icons-material/Info';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100vw\",\n    minHeight: \"100vh\",\n    backgroundImage: 'url(https://www.healthline.com/hlcmsresource/images/Blood_Donation-1200x549-facebook.jpg)',\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    padding: \"30px\",\n    display: \"flex\",\n    \n    justifyContent: \"center\",\n    flexDirection: \"column\"\n    \n  },\n  title: {\n    fontWeight: \"400\",\n  },\n  content: {\n    padding: \"30px\",\n    backgroundColor: \"#fafafaaa\",\n    width: \"60%\",\n    marginTop: theme.spacing(2),\n    \"&:nth-child(even)\": {\n      marginLeft: \"auto\"\n    }\n  }\n}));\n\nconst AboutUs = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\\\n   \n    <Typography variant=\"h2\" align=\"center\" className={classes.title}>\n       ABOUT US\n      </Typography>\n  \n     \n      <br />\n      <Divider />\n      <br />\n      <br />\n      <div>\n        <Paper className={classes.content}>\n          <Typography variant=\"h3\">WHO WE ARE ?</Typography>\n          <Typography variant=\"h5\">is an online platform that brings the blood donors and receiver under one roof. It allows the receiver search for the donors in their locality with ease and help them to connect easily without any hassle. It also allows the donors the look up for the receiver or blood bank near them to donate blood.</Typography>\n        </Paper>\n        <Paper className={classes.content}>\n          <Typography variant=\"h3\">BLOOD DONORS</Typography>\n          <Typography variant=\"h5\">RAKTKOSH provides users interface to help others by donating blood either directly by responding to seekers or by going to campaigns initiated by Blood Banks.</Typography>\n        </Paper>\n        <Paper className={classes.content}>\n          <Typography variant=\"h3\">BLOOD RECIEPIENTS</Typography>\n          <Typography variant=\"h5\">RAKTKOSH provides an interface for users to search blood doners in respective area and to communicate with them for transfusion.</Typography>\n        </Paper>\n        <Paper className={classes.content}>\n          <Typography variant=\"h3\">BLOOD BANKS</Typography>\n          <Typography variant=\"h5\">RAKTKOSH provides an interface for blood banks to provide blood to respective seekers and also to search blood doners in respective area by initiating camapigns for blood donation.</Typography>\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutUs;","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\contactus.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\profile.jsx",["238","239","240","241","242","243","244","245","246","247"],"import { Backdrop, Card, CardContent, CircularProgress, Container, Divider, Fab, Grid, Snackbar, Typography } from \"@material-ui/core\";\nimport { AccountCircleRounded, Email, VerifiedUser, Cake, Phone, InvertColors, LocationCity, Edit } from \"@material-ui/icons/\";\nimport { useSelector } from \"react-redux\";\nimport Post from '../components/posts';\nimport ProfilePost from '../components/posts/profilePost'\nimport useStyles from \"../styles/pages/profile\";\nimport useAxios from '../hooks/axios';\nimport axios from '../config/axios.config';\nimport { useEffect, useState } from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport PostEditForm from \"../components/profile-edit-form\";\nimport AddressEditForm from \"../components/user-address-form\";\nimport { useParams } from \"react-router\";\nimport { Route, useHistory } from \"react-router\";\n\nconst ProfilePage = props => {\n  const history = useHistory();\n  const classes = useStyles();\n\n const id = props.user;\n  const userInfo = useSelector(store => store.user);\n  const [posts, handlePost] = useState([]);\n  const[user, setuser]=useState({});\n  const [posterror, handlePostError] = useState({});\n  const [open, handleOpen] = useState(false);\n  const [openAddress, handleAddressForm] = useState(false);\n\n const [response, error, waiting] = useAxios(`/account/profile/${id}`);\n \n  const [address, errorAdd, waitingAdd] = useAxios(`/user/address/${id}`);\n\n\n\n\n  useEffect(() => {\n    if (response) {\n      axios.get(`/post/byUser/${response.id}`)\n        .then(res => {\n          handlePost(res.data);\n        })\n        .catch(error => {\n          if (!error.response) {\n            handlePostError(({ open: true, severity: \"error\", message: \"Network Error\" }));\n          }\n          else {\n            handlePostError(({ open: true, severity: \"error\", message: error.response.data.message }));\n          }\n        });\n    }\n   \n  }, [response]);\n\n  return (\n    <Container maxWidth={\"lg\"}>\n      <Backdrop className={classes.backdrop} open={waiting}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Snackbar open={posterror.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={posterror.severity}>\n          {posterror.message}\n        </Alert>\n      </Snackbar>\n\n      <PostEditForm open={open} handleClose={() => handleOpen(false)} id={userInfo.id} />\n\n      <AddressEditForm open={openAddress} handleClose={() => handleAddressForm(false)} id={userInfo.id} />\n      \n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Card className={classes.content}>\n            <CardContent>\n              <Typography className={classes.title} component=\"h1\">\n                <VerifiedUser fontSize=\"large\" /> &nbsp; {response?.name}\n                <Fab size=\"small\" color=\"primary\" className={classes.edit_btn} onClick={() => handleOpen(!false)}>\n                  <Edit />\n                </Fab>\n              </Typography>\n              <Divider />\n              <Typography component=\"h6\" className={classes.typo}>\n                <AccountCircleRounded fontSize=\"small\" /> &nbsp; {response?.username}\n              </Typography>\n              {((userInfo.authority === \"ADMIN\"|| userInfo.authority===\"USER\")) && (\n                <Typography component=\"h6\" className={classes.typo}>\n                <Cake fontSize=\"small\" /> &nbsp; {response?.dob}\n              </Typography>\n          )}\n              \n              <Typography component=\"h6\" className={classes.typo}>\n                <Phone fontSize=\"small\" /> &nbsp; {response?.mobile || \"N/A\"}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <Email fontSize=\"small\" /> &nbsp; {response?.email}\n              </Typography>\n              \n              {((userInfo.authority === \"ADMIN\"|| userInfo.authority===\"USER\")) && (\n                <Typography component=\"h6\" className={classes.typo}>\n                <InvertColors fontSize=\"small\" /> &nbsp; {response?.bloodType || \"N/A\" } {response?.antigen === \"POSITIVE\" ? \"+\" : \"-\"}\n              </Typography>\n          )}\n              \n              <Typography component=\"h6\" className={classes.typo}>\n                <LocationCity fontSize=\"small\" /> &nbsp; {\n                  !address\n                  ? \"N/A\"\n                  : `${address?.locality}, ${address?.city} - ${address?.zip} ${address?.state}`\n                }\n                {(userInfo.id==response?.id)&&(\n                  <Fab size=\"small\" color=\"primary\" className={classes.edit_btn} onClick={() => handleAddressForm(!false)}>\n                  <Edit />\n                </Fab>\n                )}\n                \n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      \n\n<Grid container spacing={2}>\n        {\n          \n          posts.length !== 0 &&\n          posts.map((post, idx) => (\n            <Grid item xs={12} sm={6} md={4} className={classes.postContainer} key={idx}>\n              <ProfilePost deletable {...post} />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ProfilePage;","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\showProfile.jsx",["248","249","250","251","252"],"import { Backdrop, Card, CardContent, CircularProgress, Container, Divider, Fab, Grid, Snackbar, Typography } from \"@material-ui/core\";\nimport { AccountCircleRounded, Email, VerifiedUser, Cake, Phone, InvertColors, LocationCity, Edit } from \"@material-ui/icons/\";\nimport { useSelector } from \"react-redux\";\nimport Post from '../components/posts';\nimport useStyles from \"../styles/pages/profile\";\nimport useAxios from '../hooks/axios';\nimport axios from '../config/axios.config';\nimport { useEffect, useState } from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport PostEditForm from \"../components/profile-edit-form\";\nimport AddressEditForm from \"../components/user-address-form\";\nimport { useParams } from \"react-router\";\n\n\nconst ShowProfile = props => {\n  const classes = useStyles();\n  const id = useParams().id;\n  const userInfo = useSelector(store => store.user);\n  const [posts, handlePost] = useState([]);\n  const [posterror, handlePostError] = useState({});\n  const [open, handleOpen] = useState(false);\n  const [openAddress, handleAddressForm] = useState(false);\n\n  const [response, error, waiting] = useAxios(`/account/profile/${id}`);\n  const [address, errorAdd, waitingAdd] = useAxios(`/user/address/${id}`);\n\n  useEffect(() => {\n    if (response) {\n      axios.get(`/post/byUser/${response.id}`)\n        .then(res => {\n          handlePost(res.data);\n        })\n        .catch(error => {\n          if (!error.response) {\n            handlePostError(({ open: true, severity: \"error\", message: \"Network Error\" }));\n          }\n          else {\n            handlePostError(({ open: true, severity: \"error\", message: error.response.data.message }));\n          }\n        });\n    }\n  }, [response]);\n\n  return (\n    <Container maxWidth={\"lg\"}>\n      <Backdrop className={classes.backdrop} open={waiting}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Snackbar open={posterror.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={posterror.severity}>\n          {posterror.message}\n        </Alert>\n      </Snackbar>\n\n      <PostEditForm open={open} handleClose={() => handleOpen(false)} id={userInfo.id} />\n\n      <AddressEditForm open={openAddress} handleClose={() => handleAddressForm(false)} id={userInfo.id} />\n      \n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Card className={classes.content}>\n            <CardContent>\n              <Typography className={classes.title} component=\"h1\">\n                <VerifiedUser fontSize=\"large\" /> &nbsp; {response?.fullname}\n                \n              </Typography>\n              <Divider />\n              <Typography component=\"h6\" className={classes.typo}>\n                <AccountCircleRounded fontSize=\"small\" /> &nbsp; {response?.username}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <Cake fontSize=\"small\" /> &nbsp; {response?.dob}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <Phone fontSize=\"small\" /> &nbsp; {response?.mobile || \"N/A\"}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <Email fontSize=\"small\" /> &nbsp; {response?.email}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <InvertColors fontSize=\"small\" /> &nbsp; {response?.bloodType || \"N/A\"} {response?.antigen === \"POSITIVE\" ? \"+\" : \"-\"}\n              </Typography>\n              <Typography component=\"h6\" className={classes.typo}>\n                <LocationCity fontSize=\"small\" /> &nbsp; {\n                  !address\n                  ? \"N/A\"\n                  : `${address?.locality}, ${address?.city} - ${address?.zip} ${address?.state}`\n                }\n                \n               \n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        {\n          posts.length !== 0 &&\n          posts.map((post, idx) => (\n            <Grid item xs={12} sm={6} md={4} className={classes.postContainer} key={idx}>\n              <Post deletable={id === userInfo.id} {...post} />\n              \n              \n            </Grid>\n          ))\n        }\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ShowProfile;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\camppost.jsx",["253","254"],"import {\n  Backdrop,\n  CircularProgress,\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Divider,\n  Fab,\n  IconButton,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Add, Delete } from \"@material-ui/icons\";\nimport { useAxios } from \"../hooks/\";\nimport useStyles from \"../styles/pages/bloodbank\";\nimport { useSelector } from \"react-redux\";\nimport BloodBankForm from \"../components/blood-bank-form\";\nimport { useState } from \"react\";\nimport axios from \"../config/axios.config\";\nimport CampForm from \"../components/camp-form\";\n\nconst CampPostTable = (props) => {\n  const classes = useStyles();\n  const userInfo = useSelector((store) => store.user);\n  const [camps, error, waiting] = useAxios(\"/camp/\");\n  const [open, handleOpen] = useState(false);\n  const [response, handleResponse] = useState({\n    loading: false,\n    open: false,\n  });\n\n  const handleDelete = (id) => {\n    handleResponse((res) => ({ ...res, loading: true }));\n    axios\n      .delete(`/camp/delete/${id}`)\n      .then((res) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"success\",\n          message: \"Blood Donation Camp Deleted Successfully\",\n        }));\n      })\n      .catch((err) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"error\",\n          message: \"Failed To Delete Camp Details\",\n        }));\n      })\n      .finally(() => {\n        handleResponse((res) => ({ ...res, open: true, loading: false }));\n        window.location.reload()\n      });\n  };\n\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={waiting}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Snackbar\n        open={response.open}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      >\n        <Alert severity={response.severity}>{response.message}</Alert>\n      </Snackbar>\n\n      <CampForm open={open} handleClose={() => handleOpen(false)} />\n\n      <TableContainer component={Paper} className={classes.container}>\n        <Typography component=\"h1\" className={classes.title}>\n          Upcoming Donation Camps\n          {(userInfo.authority === \"ADMIN\") && (\n            <Fab\n              variant=\"extended\"\n              color=\"primary\"\n              className={classes.add_btn}\n              onClick={() => handleOpen(!false)}\n            >\n              <Add />\n             Add Blood Donation Camp\n            </Fab>\n          )}\n        </Typography>\n        <Divider absolute />\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {/* <TableCell>Reg. ID</TableCell> */}\n              <TableCell align=\"center\">Name</TableCell>\n              <TableCell align=\"center\">Date</TableCell>\n              <TableCell align=\"center\">Locality</TableCell>\n              <TableCell align=\"center\">City</TableCell>\n              <TableCell align=\"center\">District</TableCell>\n              <TableCell align=\"center\">Zipcode</TableCell>\n              <TableCell align=\"center\">Open At</TableCell>\n              <TableCell align=\"center\">Close At</TableCell>\n              {(userInfo.authority === \"ADMIN\") && (\n                <TableCell align=\"right\">Delete</TableCell>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {camps &&\n              camps.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell component=\"th\" scope=\"row\">\n                    <Link to={`/camp/${row.id}`} component={RLink}>\n                      {row.regID}\n                    </Link>\n                  </TableCell> */}\n                  <TableCell align=\"center\">{row.name}</TableCell>\n                  <TableCell align=\"center\">{row.campDate}</TableCell>\n                  <TableCell align=\"center\">{row.locality}</TableCell>\n                  <TableCell align=\"center\">{row.city}</TableCell>\n                  <TableCell align=\"center\">{row.district}</TableCell>\n                  <TableCell align=\"center\">{row.zip}</TableCell>\n                  <TableCell align=\"center\">{row.startTime}</TableCell>\n                  <TableCell align=\"center\">{row.endTime}</TableCell>\n                  {(userInfo.authority === \"ADMIN\"\n        ) && (\n                    <TableCell align=\"right\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"secondary\"\n                        onClick={() => handleDelete(row.id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default CampPostTable;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\pages\\bloodbankdetails.jsx",["255","256","257","258","259","260","261"],"import {\n  Container,\n  Divider,\n  Paper,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Backdrop,\n  CircularProgress,\n  IconButton,\n  Fab,\n  Snackbar,\n} from \"@material-ui/core\";\nimport {\n  TimerSharp,\n  Email,\n  Phone,\n  VerifiedUser,\n  LocationCity,\n  Delete,\n  Add,\n} from \"@material-ui/icons\";\nimport { useEffect, useState ,useReducer} from \"react\";\nimport { useHistory, useParams, useLocation } from \"react-router\";\nimport { useAxios } from \"../hooks\";\nimport axios from \"../config/axios.config\";\nimport useStyles from \"../styles/pages/bloodbankdetails\";\nimport { useSelector } from \"react-redux\";\nimport BankRepositoryForm from \"../components/blood-repository-form\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst BloodBankDetails = (props) => {\n  const id = useParams().id;\n  const history = useHistory();\n  const location = useLocation();\n  const [data, error, waiting] = useAxios(`/bloodbank/${id}`);\n  const [bb_address, errors, waitings] = useAxios(`/user/bloodbank/address/${id}`);\n  const [repo, handleRepo] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [open, handleOpen] = useState(false);\n  const classes = useStyles();\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n  \n  const [response, handleResponse] = useState({\n    loading: false,\n    open: false,\n  });\n\n  const userInfo = useSelector((store) => store.user);\n\n  useEffect(() => {\n    if (data) {\n      axios\n        .get(`/bloodrepo/${data.id}`)\n        .then((res) => handleRepo(res.data))\n        .catch((err) => console.log(err));\n    }\n  }, [data,ignored]);\n\n  const handleDelete = (repoID) => {\n    axios\n      .delete(`/bloodrepo/${id}`, { data: repoID })\n      .then((res) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"success\",\n          message: \"Blood Repository Deleted Successfully\",\n        }));\n        \n      })\n      .catch((err) => {\n        handleResponse((res) => ({\n          ...res,\n          severity: \"error\",\n          message: \"Failed To Delete Blood Repository\",\n        }));\n      })\n      .finally(() => {\n\n        handleResponse((res) => ({ ...res, open: true, loading: false }));\n        window.location.reload();\n      });\n  };\n\n  return (\n    <Container maxWidth={\"lg\"}>\n      <Backdrop className={classes.backdrop} open={waiting || response.open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {data && (\n        <BankRepositoryForm refresh={setRefresh}\n          open={open}\n          id={data.id}\n          handleClose={() => {\n            handleOpen(false);\n            setRefresh(true);\n            \n          }}\n          \n        />\n      )}\n\n      <Snackbar\n        open={response.open}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      >\n        <Alert severity={response.severity}>{response.message}</Alert>\n      </Snackbar>\n\n      {data && (\n        <Paper variant=\"outlined\" className={classes.root}>\n          <Typography component=\"h1\" className={classes.title}>\n            <VerifiedUser fontSize=\"large\" /> &nbsp; {data.name}\n            {(userInfo.authority === \"ADMIN\" || userInfo.id===data.userId) && (\n              <Fab\n                size=\"small\"\n                color=\"primary\"\n                className={classes.add_btn}\n                onClick={() => handleOpen(!false)}\n              >\n                <Add />\n              </Fab>\n            )}\n          </Typography>\n          <Divider />\n          <Typography component=\"h6\" className={classes.typo}>\n            <Phone fontSize=\"small\" /> &nbsp; {data?.mobile || \"N/A\"}\n          </Typography>\n          <Typography component=\"h6\" className={classes.typo}>\n            <Email fontSize=\"small\" /> &nbsp; {data.email}\n          </Typography>\n          <Typography component=\"h6\" className={classes.typo}>\n            <TimerSharp fontSize=\"small\" /> &nbsp; Operate from {data.openAt} AM\n            to {data.closeAt} PM\n          </Typography>\n          \n          <Typography component=\"h6\" className={classes.typo}>\n            <LocationCity fontSize=\"small\" /> &nbsp;{\" \"}\n            {!bb_address?.state\n              ? \"N/A\"\n              : `${bb_address.locality}, ${bb_address.city} - ${bb_address.zip} ${bb_address.state}`}\n          </Typography>\n          {repo.length !== 0 && (\n            <TableContainer className={classes.container}>\n              <Typography component=\"h1\" className={classes.table_title}>\n                Repository\n              </Typography>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\">Blood Group</TableCell>\n                    <TableCell align=\"center\">Antigen</TableCell>\n                    <TableCell align=\"center\">Units Available</TableCell>\n                    {(userInfo.authority === \"ADMIN\" || userInfo.id===data.userId)&& (\n                    <TableCell align=\"center\">Delete</TableCell>)}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {repo.map((row, idx) => (\n                    <TableRow key={idx}>\n                      <TableCell align=\"center\">{row.id.type}</TableCell>\n                      <TableCell align=\"center\">{row.id.antigen}</TableCell>\n                      <TableCell align=\"center\">{row.availability}</TableCell>\n\n\n                      {(userInfo.authority === \"ADMIN\" || userInfo.id===data.userId) &&  (\n                       <TableCell align=\"center\">\n\n                          <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => handleDelete({\n                            type: row.id.type,\n                            antigen: row.id.antigen\n                          })}>\n                            <Delete />\n                          </IconButton>\n\n                        </TableCell>)}\n\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </Paper>\n      )}\n    </Container>\n  );\n};\n\nexport default BloodBankDetails;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\axios.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\hooks\\theme.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\copyright\\index.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\account-enable-dialog\\index.jsx",["262"],"import { Dialog, DialogContent, DialogTitle, Slide, Typography } from \"@material-ui/core\";\nimport { forwardRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { mergeClasses } from \"@material-ui/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"50px\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: red[500],\n  }\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AccountNotEnableDialog = props => {\n  const classes = useStyles();\n  return (\n    <Dialog open={props.open} onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      TransitionComponent={Transition}\n      className={classes.root}\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        <Typography className={classes.title}  variant=\"h3\">Account is not enabled</Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"h4\">\n          Check your email, and click on the link provied to activate your account.\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AccountNotEnableDialog;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\bloodbankdetails.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\post.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\post-form\\index.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\blood-bank-form\\index.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\user-address-form\\index.jsx",["263","264","265","266","267"],"import { Backdrop, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, MenuItem, Select, Slide, Snackbar, TextField } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState, forwardRef, useEffect } from 'react';\nimport axios from \"../../config/axios.config\";\nimport useStyles from \"../../styles/components/blood-bank-form\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst AddressEditForm = props => {\n  const classes = useStyles();\n  const [form, handleForm] = useState({});\n  const [errors, handleErrors] = useState({});\n  const [response, handleResponse] = useState({\n    loading: false,\n    open: false\n  });\n\n  const handleChange = e => {\n    handleForm(form => ({ ...form, [e.target.name]: e.target.value }))\n  };\n\n  const handleBlur = e => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      handleErrors(errors => ({ ...errors, [e.target.name]: `${e.target.name} is required.` }));\n    }\n    else {\n      handleErrors(errors => {\n        let error = { ...errors };\n        delete error[e.target.name];\n        return error;\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    handleResponse(res => ({ ...res, loading: true }));\n    axios.post(`/user/update/address/${props.id}`, form)\n      .then(res => {\n        handleResponse(res => ({ ...res, severity: \"success\", message: \"Address Updated Successfully\" }));\n      })\n      .catch(err => {\n        handleResponse(res => ({ ...res, severity: \"error\", message: \"Failed To Update Address\" }));\n      })\n      .finally(() => {\n        handleResponse(res => ({ ...res, open: true, loading: false }));\n      });\n\n  };\n\n  useEffect(() => {\n    if (props.open) {\n      axios.get(`/user/address/${props.id}`)\n        .then(res => handleForm({ ...res.data }))\n        .catch(err => console.log(err));\n    }\n  }, [props.open]);\n\n  return (\n    <Dialog open={props.open} onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.root}\n      TransitionComponent={Transition}\n    >\n\n      <Backdrop className={classes.backdrop} open={response.loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={response.severity}>\n          {response.message}\n        </Alert>\n      </Snackbar>\n\n      <DialogTitle id=\"form-dialog-title\">Edit Address</DialogTitle>\n\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"locality\"\n              name=\"locality\"\n              label=\"Locality\"\n              type=\"text\"\n              fullWidth\n              value={form?.locality}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.locality !== undefined}\n              helperText={errors.locality}\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"city\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              fullWidth\n              value={form?.city}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.city !== undefined}\n              helperText={errors.city}\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"district\"\n              name=\"district\"\n              label=\"District\"\n              type=\"text\"\n              fullWidth\n              value={form?.district}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.district !== undefined}\n              helperText={errors.district}\n            />\n          </Grid>\n\n          <Grid item xs={9}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"state\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              fullWidth\n              value={form?.state}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.state !== undefined}\n              helperText={errors.state}\n            />\n          </Grid>\n\n          <Grid item xs={3}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"zip\"\n              name=\"zip\"\n              label=\"Pin Code\"\n              type=\"text\"\n              fullWidth\n              value={form?.zip}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.zip !== undefined}\n              helperText={errors.zip}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={()=>{\n            handleSubmit()\n            window.location.reload();\n          }\n            \n          }\n        >\n          Save\n        </Button>\n        <Button onClick={() => {\n          props.handleClose();\n          handleResponse({\n            loading: false,\n            open: false\n          });\n\n        }} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddressEditForm;\n","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\camp-form\\index.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\blood-repository-form\\index.jsx",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\theme\\index.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\blood-bank-form.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\components\\post-form.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\bloodbank.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\styles\\pages\\profile.js",[],"C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\posts\\profilePost.jsx",["268","269","270"],"import { Card, CardActions, CardContent, IconButton, Typography, Divider, Snackbar, Link } from \"@material-ui/core\";\nimport { DateRange } from \"@material-ui/icons\";\nimport axios from '../../config/axios.config';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport useStyles from \"../../styles/components/post\";\n\nimport { Alert } from \"@material-ui/lab\";\nimport { render } from \"react-dom\";\nimport React, { useState, useEffect } from 'react';\n\n// import { Link as RLink } from 'react-router-dom';\n\nconst ProfilePost = ({ deletable, antigen, createdOn, id, postCategory, type, userId }) => {\n  const classes = useStyles();\n  \n  const [response, handleResponse] = useState({\n    open: false\n  });\n \n  const [isVis, setIsVis] = useState(true);\n\n//  useEffect(()=>{},[])\n\n  const deletePost = (postID) => {\n    \n    axios.delete(`/post/delete/${postID}`)\n      .then(res => {\n        handleResponse({ open: true, severity: \"success\", message: \"Post Delete Successfully\" });\n        // render();\n      })\n      .catch(err => {\n        handleResponse({ open: true, severity: \"error\", message: \"Post Deletion Failed\" });\n      });\n  };\n\n  return (\n    <>\n      {isVis && (<><Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={response.severity}>\n          {response.message}\n        </Alert>\n      </Snackbar>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"h3\">\n            {userId.fullname}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.typo}>\n            {postCategory === \"DONOR\" ? \"Available\" : \"Looging\"} for {type}{antigen === \"POSITIVE\" ? \"+\" : \"-\"} blood\n          </Typography>\n          \n          <Divider />\n          <Typography variant=\"body2\" component=\"p\" className={classes.typo}>\n            <DateRange fontSize=\"small\" /> &nbsp; {createdOn.replace(\"T\", \" at \")}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          {\n            deletable && (\n              <IconButton aria-label=\"delete\" className={classes.delete} onClick={() => \n                {deletePost(id);\n                setInterval(()=>{setIsVis(false)})\n              }} >\n\n                <DeleteIcon />\n              </IconButton>\n            )\n          } \n        </CardActions>\n      </Card>\n      </>\n      )}\n    </>\n  );\n};\n\nexport default ProfilePost;","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\posts\\index.jsx",["271"],"\n\nimport { Card, CardContent, Typography, Divider, Snackbar, Link } from \"@material-ui/core\";\nimport { DateRange } from \"@material-ui/icons\";\n\n\nimport useStyles from \"../../styles/components/post\";\nimport React, { useState} from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link as RLink } from 'react-router-dom';\n\n\nconst Post = ({ antigen, createdOn, postCategory, type, userId,state, district,city,locality,zip }) => {\n  const classes = useStyles();\n \n\n  const [response, handleResponse] = useState({\n    open: false\n  });\n\n  \n  \n\n  return (\n    <>\n      <Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={response.severity}>\n          {response.message}\n        </Alert>\n      </Snackbar>\n      <Link component={RLink} to={`/showProfile/${userId.id}`}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"h3\">\n            {userId.name}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.typo}>\n            {postCategory === \"DONOR\" ? \"Available\" : \"Looking\"} for {type}{antigen === \"POSITIVE\" ? \"+\" : \"-\"} blood\n          </Typography>\n         \n            {(state)&&(\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"h3\">\n            {state},{district},{city},{locality},{zip}\n          </Typography>\n            )}\n            \n          <Divider />\n          <Typography variant=\"body2\" component=\"p\" className={classes.typo}>\n            <DateRange fontSize=\"small\" /> &nbsp; {createdOn.replace(\"T\", \" at \")}\n          </Typography>\n        </CardContent>\n        \n      </Card>\n      </Link>\n    </>\n  );\n};\n\nexport default Post;","C:\\Users\\sachin\\Desktop\\PGDAC-Raktkosh-main\\PGDAC-Raktkosh-main\\raktkosh-final\\frontend-app\\src\\components\\profile-edit-form\\index.jsx",["272"],"\nimport { Backdrop, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, InputLabel, MenuItem, Select, Slide, Snackbar, TextField } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useState, forwardRef, useEffect } from 'react';\nimport axios from \"../../config/axios.config\";\nimport useStyles from \"../../styles/components/blood-bank-form\";\nimport { useSelector } from \"react-redux\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst PostEditForm = props => {\n  const userInfo = useSelector(store => store.user);\n  const classes = useStyles();\n  const [form, handleForm] = useState({});\n  const [errors, handleErrors] = useState({});\n  const [response, handleResponse] = useState({\n    loading: false,\n    open: false\n  });\n\n  const handleChange = e => {\n    handleForm(form => ({ ...form, [e.target.name]: e.target.value }))\n  };\n\n  const handleBlur = e => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      handleErrors(errors => ({ ...errors, [e.target.name]: `${e.target.name} is required.` }));\n    }\n    else {\n      handleErrors(errors => {\n        let error = { ...errors };\n        delete error[e.target.name];\n        return error;\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    handleResponse(res => ({ ...res, loading: true }));\n    if (userInfo.authority === \"ADMIN\" || userInfo.authority === \"USER\") {\n      axios.post(`/user/update/${props.id}`, form)\n        .then(res => {\n          handleResponse(res => ({ ...res, severity: \"success\", message: \"Profile Updated Successfully\" }));\n        })\n        .catch(err => {\n          handleResponse(res => ({ ...res, severity: \"error\", message: \"Failed To Update Profile\" }));\n        })\n        .finally(() => {\n          handleResponse(res => ({ ...res, open: true, loading: false }));\n        });\n    }\n\n    if (userInfo.authority === \"BLOOD_BANK\") {\n      axios.post(`/bloodbank/update/${props.id}`, form)\n        .then(res => {\n          handleResponse(res => ({ ...res, severity: \"success\", message: \"Profile Updated Successfully\" }));\n        })\n        .catch(err => {\n          handleResponse(res => ({ ...res, severity: \"error\", message: \"Failed To Update Profile\" }));\n        })\n        .finally(() => {\n          handleResponse(res => ({ ...res, open: true, loading: false }));\n        });\n    }\n\n\n  };\n\n  useEffect(() => {\n    if (props.open) {\n      axios.get(`/account/profile/${props.id}`)\n        .then(res => handleForm({ ...res.data }))\n        .catch(err => console.log(err));\n    }\n  }, [props.open]);\n\n  return (\n    <Dialog open={props.open} onClose={props.handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      className={classes.root}\n      TransitionComponent={Transition}\n    >\n\n      <Backdrop className={classes.backdrop} open={response.loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n\n      <Snackbar open={response.open} autoHideDuration={6000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert severity={response.severity}>\n          {response.message}\n        </Alert>\n      </Snackbar>\n\n      <DialogTitle id=\"form-dialog-title\">Edit Profile</DialogTitle>\n\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"name\"\n              name=\"name\"\n              label=\"Fullname\"\n              type=\"text\"\n              fullWidth\n              value={form?.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.name !== undefined}\n              helperText={errors.name}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"username\"\n              name=\"username\"\n              label=\"Username\"\n              type=\"text\"\n              fullWidth\n              value={form?.username}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.username !== undefined}\n              helperText={errors.username}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"email\"\n              name=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              value={form?.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.email !== undefined}\n              helperText={errors.email}\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"mobile\"\n              name=\"mobile\"\n              label=\"Mobile\"\n              type=\"tel\"\n              fullWidth\n              value={form?.mobile}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={errors.mobile !== undefined}\n              helperText={errors.mobile}\n            />\n          </Grid>\n          {((userInfo.authority === \"ADMIN\" || userInfo.authority === \"USER\") &&\n            <Grid item xs={6}>\n              <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                <InputLabel id=\"blood-type\">Blood Type</InputLabel>\n                <Select\n                  labelId=\"blood-type\"\n                  id=\"blood-type-select\"\n                  // id=\"bloodType\"\n                  label=\"Blood Type\"\n                  //name=\"type\"\n                  name=\"bloodType\"\n                  value={form?.type}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors?.type}\n                >\n                  <MenuItem value=\" \">\n                    <em>None</em>\n                  </MenuItem>\n                  {\n                    [\"O\", \"A\", \"B\", \"AB\"].map((type, idx) => (\n                      <MenuItem value={type} key={idx}>{type}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n          )}\n\n\n          {((userInfo.authority === \"ADMIN\" || userInfo.authority === \"USER\") &&\n            <Grid item xs={6}>\n              <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                <InputLabel id=\"antigen-type\">Antigen Type</InputLabel>\n                <Select\n                  labelId=\"antigen-type\"\n                  id=\"antigen-type-select\"\n                  label=\"Antigen Type\"\n                  name=\"antigen\"\n                  value={form?.antigen}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors?.antigen}\n                >\n                  <MenuItem value=\" \">\n                    <em>None</em>\n                  </MenuItem>\n                  {\n                    [\"POSITIVE\", \"NEGATIVE\"].map((type, idx) => (\n                      <MenuItem value={type} key={type}>{type}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n          )}\n\n          {((userInfo.authority === \"BLOOD_BANK\") &&\n            <Grid item xs={6}>\n              <TextField\n                id=\"openAt\"\n                name=\"openAt\"\n                label=\"Open At\"\n                type=\"time\"\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={form?.openAt}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.openAt !== undefined}\n                helperText={errors.openAt}\n                className={classes.field}\n              />\n            </Grid>\n          )}\n\n          {((userInfo.authority === \"BLOOD_BANK\") &&\n            <Grid item xs={6}>\n              <TextField\n                id=\"closeAt\"\n                name=\"closeAt\"\n                label=\"Close At\"\n                type=\"time\"\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={form?.closeAt}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.closeAt !== undefined}\n                helperText={errors.closeAt}\n                className={classes.field}\n              />\n            </Grid>\n          )}\n\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          // onClick={handleSubmit}\n          onClick={() => {\n            handleSubmit()\n            props.handleClose();\n            handleResponse({\n              loading: false,\n              open: false\n            });\n            window.location.reload();\n          }}\n\n        >\n          Save\n        </Button>\n        <Button onClick={() => {\n          props.handleClose();\n          handleResponse({\n            loading: false,\n            open: false\n          });\n\n        }} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PostEditForm;",{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":1,"column":10,"nodeType":"279","messageId":"280","endLine":1,"endColumn":16},{"ruleId":"277","severity":1,"message":"281","line":4,"column":10,"nodeType":"279","messageId":"280","endLine":4,"endColumn":21},{"ruleId":"277","severity":1,"message":"282","line":5,"column":10,"nodeType":"279","messageId":"280","endLine":5,"endColumn":21},{"ruleId":"277","severity":1,"message":"283","line":21,"column":9,"nodeType":"279","messageId":"280","endLine":21,"endColumn":22},{"ruleId":"277","severity":1,"message":"284","line":1,"column":49,"nodeType":"279","messageId":"280","endLine":1,"endColumn":53},{"ruleId":"277","severity":1,"message":"285","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":14},{"ruleId":"277","severity":1,"message":"286","line":2,"column":16,"nodeType":"279","messageId":"280","endLine":2,"endColumn":24},{"ruleId":"277","severity":1,"message":"287","line":6,"column":16,"nodeType":"279","messageId":"280","endLine":6,"endColumn":32},{"ruleId":"277","severity":1,"message":"288","line":15,"column":10,"nodeType":"279","messageId":"280","endLine":15,"endColumn":24},{"ruleId":"277","severity":1,"message":"289","line":22,"column":9,"nodeType":"279","messageId":"280","endLine":22,"endColumn":17},{"ruleId":"277","severity":1,"message":"286","line":2,"column":18,"nodeType":"279","messageId":"280","endLine":2,"endColumn":26},{"ruleId":"277","severity":1,"message":"287","line":6,"column":18,"nodeType":"279","messageId":"280","endLine":6,"endColumn":34},{"ruleId":"277","severity":1,"message":"288","line":15,"column":12,"nodeType":"279","messageId":"280","endLine":15,"endColumn":26},{"ruleId":"277","severity":1,"message":"289","line":22,"column":11,"nodeType":"279","messageId":"280","endLine":22,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":58,"column":32,"nodeType":"292","messageId":"293","endLine":58,"endColumn":34},{"ruleId":"277","severity":1,"message":"294","line":9,"column":71,"nodeType":"279","messageId":"280","endLine":9,"endColumn":92},{"ruleId":"277","severity":1,"message":"295","line":10,"column":46,"nodeType":"279","messageId":"280","endLine":10,"endColumn":74},{"ruleId":"277","severity":1,"message":"296","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":19},{"ruleId":"277","severity":1,"message":"297","line":10,"column":17,"nodeType":"279","messageId":"280","endLine":10,"endColumn":22},{"ruleId":"277","severity":1,"message":"298","line":10,"column":24,"nodeType":"279","messageId":"280","endLine":10,"endColumn":31},{"ruleId":"277","severity":1,"message":"297","line":32,"column":17,"nodeType":"279","messageId":"280","endLine":32,"endColumn":22},{"ruleId":"277","severity":1,"message":"299","line":1,"column":10,"nodeType":"279","messageId":"280","endLine":1,"endColumn":14},{"ruleId":"277","severity":1,"message":"300","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":26},{"ruleId":"277","severity":1,"message":"301","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":16},{"ruleId":"277","severity":1,"message":"302","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":12},{"ruleId":"277","severity":1,"message":"303","line":13,"column":10,"nodeType":"279","messageId":"280","endLine":13,"endColumn":19},{"ruleId":"277","severity":1,"message":"304","line":14,"column":10,"nodeType":"279","messageId":"280","endLine":14,"endColumn":15},{"ruleId":"277","severity":1,"message":"305","line":17,"column":9,"nodeType":"279","messageId":"280","endLine":17,"endColumn":16},{"ruleId":"277","severity":1,"message":"306","line":23,"column":9,"nodeType":"279","messageId":"280","endLine":23,"endColumn":13},{"ruleId":"277","severity":1,"message":"307","line":23,"column":15,"nodeType":"279","messageId":"280","endLine":23,"endColumn":22},{"ruleId":"277","severity":1,"message":"297","line":28,"column":19,"nodeType":"279","messageId":"280","endLine":28,"endColumn":24},{"ruleId":"277","severity":1,"message":"308","line":30,"column":19,"nodeType":"279","messageId":"280","endLine":30,"endColumn":27},{"ruleId":"277","severity":1,"message":"309","line":30,"column":29,"nodeType":"279","messageId":"280","endLine":30,"endColumn":39},{"ruleId":"290","severity":1,"message":"291","line":107,"column":30,"nodeType":"292","messageId":"293","endLine":107,"endColumn":32},{"ruleId":"277","severity":1,"message":"310","line":1,"column":77,"nodeType":"279","messageId":"280","endLine":1,"endColumn":80},{"ruleId":"277","severity":1,"message":"311","line":2,"column":94,"nodeType":"279","messageId":"280","endLine":2,"endColumn":98},{"ruleId":"277","severity":1,"message":"297","line":24,"column":20,"nodeType":"279","messageId":"280","endLine":24,"endColumn":25},{"ruleId":"277","severity":1,"message":"308","line":25,"column":19,"nodeType":"279","messageId":"280","endLine":25,"endColumn":27},{"ruleId":"277","severity":1,"message":"309","line":25,"column":29,"nodeType":"279","messageId":"280","endLine":25,"endColumn":39},{"ruleId":"277","severity":1,"message":"312","line":22,"column":8,"nodeType":"279","messageId":"280","endLine":22,"endColumn":21},{"ruleId":"277","severity":1,"message":"297","line":30,"column":17,"nodeType":"279","messageId":"280","endLine":30,"endColumn":22},{"ruleId":"277","severity":1,"message":"305","line":38,"column":9,"nodeType":"279","messageId":"280","endLine":38,"endColumn":16},{"ruleId":"277","severity":1,"message":"313","line":39,"column":9,"nodeType":"279","messageId":"280","endLine":39,"endColumn":17},{"ruleId":"277","severity":1,"message":"297","line":40,"column":16,"nodeType":"279","messageId":"280","endLine":40,"endColumn":21},{"ruleId":"277","severity":1,"message":"314","line":41,"column":22,"nodeType":"279","messageId":"280","endLine":41,"endColumn":28},{"ruleId":"277","severity":1,"message":"315","line":41,"column":30,"nodeType":"279","messageId":"280","endLine":41,"endColumn":38},{"ruleId":"277","severity":1,"message":"316","line":43,"column":10,"nodeType":"279","messageId":"280","endLine":43,"endColumn":17},{"ruleId":"277","severity":1,"message":"317","line":46,"column":19,"nodeType":"279","messageId":"280","endLine":46,"endColumn":30},{"ruleId":"277","severity":1,"message":"318","line":4,"column":10,"nodeType":"279","messageId":"280","endLine":4,"endColumn":22},{"ruleId":"277","severity":1,"message":"319","line":1,"column":97,"nodeType":"279","messageId":"280","endLine":1,"endColumn":108},{"ruleId":"277","severity":1,"message":"320","line":1,"column":116,"nodeType":"279","messageId":"280","endLine":1,"endColumn":126},{"ruleId":"277","severity":1,"message":"321","line":1,"column":128,"nodeType":"279","messageId":"280","endLine":1,"endColumn":136},{"ruleId":"277","severity":1,"message":"322","line":1,"column":138,"nodeType":"279","messageId":"280","endLine":1,"endColumn":144},{"ruleId":"323","severity":1,"message":"324","line":58,"column":6,"nodeType":"325","endLine":58,"endColumn":18,"suggestions":"326"},{"ruleId":"277","severity":1,"message":"284","line":1,"column":85,"nodeType":"279","messageId":"280","endLine":1,"endColumn":89},{"ruleId":"277","severity":1,"message":"327","line":8,"column":10,"nodeType":"279","messageId":"280","endLine":8,"endColumn":16},{"ruleId":"277","severity":1,"message":"296","line":9,"column":27,"nodeType":"279","messageId":"280","endLine":9,"endColumn":36},{"ruleId":"277","severity":1,"message":"328","line":17,"column":20,"nodeType":"279","messageId":"280","endLine":17,"endColumn":34},{"ruleId":"323","severity":1,"message":"324","line":77,"column":6,"nodeType":"325","endLine":77,"endColumn":18,"suggestions":"329"},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'switchTheme' is defined but never used.","'requestServer' is assigned a value but never used.","'Link' is defined but never used.","'grey' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'setUserDetails' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LocalHospitalOutlined' is defined but never used.","'SupervisedUserCircleOutlined' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'waiting' is assigned a value but never used.","'Grid' is defined but never used.","'PhoneForwardedIcon' is defined but never used.","'InfoIcon' is defined but never used.","'Post' is defined but never used.","'useParams' is defined but never used.","'Route' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'setuser' is assigned a value but never used.","'errorAdd' is assigned a value but never used.","'waitingAdd' is assigned a value but never used.","'Fab' is defined but never used.","'Edit' is defined but never used.","'BloodBankForm' is defined but never used.","'location' is assigned a value but never used.","'errors' is assigned a value but never used.","'waitings' is assigned a value but never used.","'refresh' is assigned a value but never used.","'forceUpdate' is assigned a value but never used.","'mergeClasses' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["332"],"'render' is defined but never used.","'handleResponse' is assigned a value but never used.",["333"],"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},"Update the dependencies array to be: [props.id, props.open]",{"range":"337","text":"338"},{"range":"339","text":"338"},[1954,1966],"[props.id, props.open]",[2648,2660]]